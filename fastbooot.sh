#! /bin/bash
#
# Automatically generated by gen_bash_script.sh
#
# fastbooot - use fastboot to flash images
#

fastbooot ()
{
	local TAG=${TAG:-${FUNCNAME[0]}}

	if [[ $1 == --* ]]; then
		usage
		return 0
	fi

	# place fastboot
	local FASTBOOT='/opt/bin/fastboot'
	if [[ ! -x $FASTBOOT ]]; then
		echo "$TAG: error: invalid $FASTBOOT."
		return 1
	fi
	[[ $UID != 0 ]] && 	FASTBOOT="sudo $FASTBOOT"
	
	# path of imgs
	local imgs_dir
	if [[ -n $1 ]]; then
		imgs_dir=$1
	elif [[ -n $TARGET_PRODUCT ]]; then
		imgs_dir="out/target/product/$TARGET_PRODUCT"
	else
		imgs_dir=$PWD
	fi
	if [[ ! -d $imgs_dir ]]; then
		echo "$TAG: error: $imgs_dir is not a directory."
		return 1
	fi
	
	local imgs=$(cd "$imgs_dir"; ls *.img *.mbn 2>/dev/null)
	if [[ -z $imgs ]]; then
		echo "$TAG: warning: no image in $imgs_dir."
		return 1
	fi

	local -A namemap
	local -A map
	local -a names
	local partname name all img
	local xml='/media/Ubuntu/upload/map.xml'

	while read line; do
		if echo $line | grep -q '<Partiton'; then
			partname=$(echo $line | cut -d\" -f2)
			continue
		elif echo $line | grep -q '<ImageName>'; then
			name=$(echo $line | sed 's/[^>]*>//;s/<[^<]*//')
			eval namemap[$name]=$partname
			names=(${names[@]} $name)
		fi
	done < "$xml"

	#echo ${names[@]}
	#echo ${namemap[@]}

	for name in ${names[@]}; do
		for img in $imgs; do
			if echo $img | grep -q "$name"; then
				eval map[$img]=${namemap[$name]}
				all="$all $img"
				break
			fi
		done
	done

	#for img in $all; do
	#	printf '%s: %s\n' $img $imgs_dir/${map[$img]}
	#done

	select img in $all; do
		[[ -n $img ]] && echo $FASTBOOT flash ${map[$img]} $img
	done

	return $?
}

# Script can be used as a program or a function
if echo $0 | grep -qvE '^[-]?bash'; then

	# Global VARs
	PRO=$(basename "$0")
	TAG=$PRO

	# Show usage
	usage ()
	{
		cat << USAGE_END
usage: $PRO [DIR]

       Use fastboot to flash images.

       Arguments:
         DIR: a directory containing images
USAGE_END

		return 0
	}

	# Main
	fastbooot "$@"
fi
